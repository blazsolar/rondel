/*
 *    Copyright 2016 Blaž Šolar
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

buildscript {
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    }
    dependencies {
        classpath "net.ltgt.gradle:gradle-apt-plugin:0.5"
        classpath 'org.junit:junit-gradle:5.0.0-SNAPSHOT'
    }
}

group LIBRARY_GROUP
version LIBRARY_VERSION

apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: "jacoco"
apply plugin: 'idea'
apply plugin: "net.ltgt.apt"

sourceCompatibility = 1.8

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
def sdkDir = properties.getProperty('sdk.dir')


repositories {
    mavenCentral()
    maven {
        url "s3://kamino-maven/lib-release"
        credentials(AwsCredentials) {
            accessKey kaminoMavenAccessKey
            secretKey kaminoMavenSecretKey
        }
    }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url "${sdkDir}/extras/android/m2repository" }
}

dependencies {

    compile project(':rondel')
    compile 'com.google.dagger:dagger:2.5'
    compile 'com.squareup:javapoet:1.7.0'
    compile 'com.google.guava:guava:19.0'
    compile 'com.google.auto:auto-common:0.6'
    compile files("${sdkDir}/extras/android/support/v4/android-support-v4.jar")
    compile files("${sdkDir}/platforms/android-24/android.jar")

    apt 'com.google.dagger:dagger-compiler:2.5'

    testCompile 'junit:junit:4.12'
    testCompile 'com.google.truth:truth:0.28'
    testCompile 'com.google.testing.compile:compile-testing:0.9'
    testCompile files(org.gradle.internal.jvm.Jvm.current().getToolsJar())
    testCompile 'com.google.dagger:dagger-compiler:2.5'

}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }

    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    '**/*_MembersInjector*',
                    '**/*_Provide*Factory*',
                    '**/*Factory*'
            ])
        })
    }
}

test {
    jacoco {
        excludes = [
                '**.*_MembersInjector*',
                '**.*_Provide*Factory*',
                '**.*Factory*'
        ]
    }
}

def mavenRepoUrl
if (isReleaseBuild()) {
    println 'RELEASE BUILD'
    mavenRepoUrl = "s3://kamino-maven.s3.eu-central-1.amazonaws.com/lib-release"
} else {
    println 'DEBUG BUILD'
    mavenRepoUrl = "s3://kamino-maven.s3.eu-central-1.amazonaws.com/lib-snapshot"
}


publishing {
    repositories {
        maven {
            url mavenRepoUrl
            credentials(AwsCredentials) {
                accessKey kaminoMavenAccessKey
                secretKey kaminoMavenSecretKey
            }
        }
    }
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}
